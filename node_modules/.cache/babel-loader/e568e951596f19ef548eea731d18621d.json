{"ast":null,"code":"var _jsxFileName = \"/home/kisus/Nextcloud/bootcamp/beside-bootcamp/react-lifting-state-up/src/components/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Task from \"./Task\";\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  _id: \"1a\",\n  name: \"Task1\",\n  description: \"Do something important\",\n  isDone: false // <== ADD\n\n}, {\n  _id: \"2b\",\n  name: \"Task2\",\n  description: \"Do something important\",\n  isDone: false // <== ADD\n\n}, {\n  _id: \"3c\",\n  name: \"Task3\",\n  description: \"Do something important\",\n  isDone: false // <== ADD\n\n}];\n\nfunction ToDoList() {\n  _s();\n\n  const [tasks, setTasks] = useState(initialTasks);\n  const [tasksCompleted, setTasksCompleted] = useState(0); // <== ADD\n\n  const toggleTaskDone = id => {\n    const tasksCopy = [...tasks];\n    tasksCopy.forEach(task => {\n      // Find the selected task and update task's `isDone` property,\n      if (task._id === id) {\n        task.isDone = task.isDone ? false : true; // then update `tasksCompleted` state variable\n\n        if (task.isDone) setTasksCompleted(tasksCompleted + 1);else if (!task.isDone) setTasksCompleted(tasksCompleted - 1);\n      }\n\n      setTasks(tasksCopy);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Summary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      toggleTask: toggleTaskDone\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"p920MFyrUFUWSdxDijPCrMZPt9k=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","Task","Summary","initialTasks","_id","name","description","isDone","ToDoList","tasks","setTasks","tasksCompleted","setTasksCompleted","toggleTaskDone","id","tasksCopy","forEach","task","map"],"sources":["/home/kisus/Nextcloud/bootcamp/beside-bootcamp/react-lifting-state-up/src/components/ToDoList.js"],"sourcesContent":["import { useState } from \"react\";\nimport Task from \"./Task\";\nimport Summary from \"./Summary\";\n\n\nconst initialTasks = [\n\n  {\n    _id: \"1a\",\n    name: \"Task1\",\n    description: \"Do something important\",\n    isDone: false                                    // <== ADD\n  },\n  {\n    _id: \"2b\",\n    name: \"Task2\",\n    description: \"Do something important\",\n    isDone: false                                    // <== ADD\n  },\n  {\n    _id: \"3c\",\n    name: \"Task3\",\n    description: \"Do something important\",\n    isDone: false                                    // <== ADD\n  }\n];\n\nfunction ToDoList() {\n\n  const [tasks, setTasks] = useState(initialTasks);\n  const [tasksCompleted, setTasksCompleted] = useState(0);    // <== ADD\n\n  const toggleTaskDone = (id) => {\n    const tasksCopy = [...tasks];\n    tasksCopy.forEach((task) => {\n      // Find the selected task and update task's `isDone` property,\n      if (task._id === id) {\n        task.isDone = task.isDone ? false : true;\n        // then update `tasksCompleted` state variable\n        if (task.isDone) setTasksCompleted(tasksCompleted + 1);\n        else if (!task.isDone) setTasksCompleted(tasksCompleted - 1);        \n      }   \n      setTasks(tasksCopy);  \n    }); \n  }\n\n  return (\n    <div>\n      <Summary />\n      <Task key={task._id} task={task} toggleTask={toggleTaskDone} />\n      <div className=\"todo-container\">\n        {tasks.map((task) => <Task key={task._id} task={task} /> )}\n      </div>\n    </div>\n  );\n}\n \nexport default ToDoList;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,YAAY,GAAG,CAEnB;EACEC,GAAG,EAAE,IADP;EAEEC,IAAI,EAAE,OAFR;EAGEC,WAAW,EAAE,wBAHf;EAIEC,MAAM,EAAE,KAJV,CAImD;;AAJnD,CAFmB,EAQnB;EACEH,GAAG,EAAE,IADP;EAEEC,IAAI,EAAE,OAFR;EAGEC,WAAW,EAAE,wBAHf;EAIEC,MAAM,EAAE,KAJV,CAImD;;AAJnD,CARmB,EAcnB;EACEH,GAAG,EAAE,IADP;EAEEC,IAAI,EAAE,OAFR;EAGEC,WAAW,EAAE,wBAHf;EAIEC,MAAM,EAAE,KAJV,CAImD;;AAJnD,CAdmB,CAArB;;AAsBA,SAASC,QAAT,GAAoB;EAAA;;EAElB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,YAAD,CAAlC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,CAAD,CAApD,CAHkB,CAG0C;;EAE5D,MAAMa,cAAc,GAAIC,EAAD,IAAQ;IAC7B,MAAMC,SAAS,GAAG,CAAC,GAAGN,KAAJ,CAAlB;IACAM,SAAS,CAACC,OAAV,CAAmBC,IAAD,IAAU;MAC1B;MACA,IAAIA,IAAI,CAACb,GAAL,KAAaU,EAAjB,EAAqB;QACnBG,IAAI,CAACV,MAAL,GAAcU,IAAI,CAACV,MAAL,GAAc,KAAd,GAAsB,IAApC,CADmB,CAEnB;;QACA,IAAIU,IAAI,CAACV,MAAT,EAAiBK,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB,CAAjB,KACK,IAAI,CAACM,IAAI,CAACV,MAAV,EAAkBK,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;MACxB;;MACDD,QAAQ,CAACK,SAAD,CAAR;IACD,CATD;EAUD,CAZD;;EAcA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAqB,IAAI,EAAEE,IAA3B;MAAiC,UAAU,EAAEJ;IAA7C,GAAWI,IAAI,CAACb,GAAhB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGK,KAAK,CAACS,GAAN,CAAWD,IAAD,iBAAU,QAAC,IAAD;QAAqB,IAAI,EAAEA;MAA3B,GAAWA,IAAI,CAACb,GAAhB;QAAA;QAAA;QAAA;MAAA,QAApB;IADH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA5BQI,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}